nimTitle	bigquery	googleapi/bigquery.html	module src/googleapi/bigquery		0
nim	DatasetReference	googleapi/bigquery.html#DatasetReference	type DatasetReference		6
nim	Dataset	googleapi/bigquery.html#Dataset	type Dataset		10
nim	TableReference	googleapi/bigquery.html#TableReference	type TableReference		16
nim	Table	googleapi/bigquery.html#Table	type Table		21
nim	getDatasets	googleapi/bigquery.html#getDatasets,Connection,string	proc getDatasets(conn: Connection; projectId: string): Future[seq[Dataset]]		31
nim	getTables	googleapi/bigquery.html#getTables,Connection,string,string	proc getTables(conn: Connection; projectId: string; datasetId: string): Future[\n    seq[Table]]		39
nim	getTable	googleapi/bigquery.html#getTable,Connection,string,string,string	proc getTable(conn: Connection; projectId, datasetId, tableId: string): Future[\n    JsonNode]		47
nim	insertQueryJob	googleapi/bigquery.html#insertQueryJob,Connection,string,string,bool,bool,int	proc insertQueryJob(conn: Connection; projectId: string; sqlQuery: string;\n               cache: bool = true; useLegacySql: bool = false;\n               maxResults: int = 10000000): Future[string]		57
nim	insertQueryJobIntoTable	googleapi/bigquery.html#insertQueryJobIntoTable,Connection,string,string,string,string,string	proc insertQueryJobIntoTable(conn: Connection; projectId: string; sqlQuery: string;\n                        toProjectId: string; toDatasetId: string;\n                        toTableId: string; overwrite = false): Future[string]		84
nim	pollQueryJob	googleapi/bigquery.html#pollQueryJob,Connection,string,string,int,string	proc pollQueryJob(conn: Connection; projectId: string; jobId: string;\n             maxResults: int = 10000000; pageToken: string = ""): Future[\n    JsonNode]		111
nim	cancelQueryJob	googleapi/bigquery.html#cancelQueryJob,Connection,string,string	proc cancelQueryJob(conn: Connection; projectId: string; jobId: string): Future[\n    JsonNode]		119
nim	getJob	googleapi/bigquery.html#getJob,Connection,string,string	proc getJob(conn: Connection; projectId, jobId: string): Future[JsonNode]		126
nim	tableInsertAll	googleapi/bigquery.html#tableInsertAll,Connection,string,string,string,seq[JsonNode]	proc tableInsertAll(conn: Connection; projectId, datasetId, tableId: string;\n               rows: seq[JsonNode]): Future[JsonNode]		131
nim	tableInsert	googleapi/bigquery.html#tableInsert,Connection,string,string,JsonNode	proc tableInsert(conn: Connection; projectId, datasetId: string; table: JsonNode): Future[\n    JsonNode]		153
nim	tablePatch	googleapi/bigquery.html#tablePatch,Connection,string,string,string,JsonNode	proc tablePatch(conn: Connection; projectId, datasetId, tableId: string;\n           table: JsonNode): Future[JsonNode]		163
nim	tableDelete	googleapi/bigquery.html#tableDelete,Connection,string,string,string	proc tableDelete(conn: Connection; projectId, datasetId, tableId: string): Future[\n    JsonNode]		172
nim	tableUpdate	googleapi/bigquery.html#tableUpdate,Connection,string,string,string,JsonNode	proc tableUpdate(conn: Connection; projectId, datasetId, tableId: string;\n            table: JsonNode): Future[JsonNode]		182
